# Repository Cleanup Script
Write-Host "üßπ D·ªçn d·∫πp repository..." -ForegroundColor Yellow

# X√≥a build artifacts
if (Test-Path ".\build\") {
    Remove-Item -Recurse -Force ".\build\"
    Write-Host "‚úÖ ƒê√£ x√≥a th∆∞ m·ª•c build" -ForegroundColor Green
}

# X√≥a executables c≈©
$exeFiles = @(
    ".\J&T Express Tool v2.0.exe",
    ".\Phat-Sot-V1.1.exe"
)

foreach ($file in $exeFiles) {
    if (Test-Path $file) {
        Remove-Item -Force $file
        Write-Host "‚úÖ ƒê√£ x√≥a $(Split-Path $file -Leaf)" -ForegroundColor Green
    }
}

# X√≥a spec files c≈©
$specFiles = @(
    ".\fetch_phone_tool.spec",
    ".\Phat-Sot-V1.1.spec"
)

foreach ($file in $specFiles) {
    if (Test-Path $file) {
        Remove-Item -Force $file
        Write-Host "‚úÖ ƒê√£ x√≥a $(Split-Path $file -Leaf)" -ForegroundColor Green
    }
}

# X√≥a archive files
$archiveFiles = @(
    ".\J&T-Express-Tool-v2.0-Release.zip",
    ".\Phat-Sot-v1.1.rar",
    ".\Phat-Sot-v1.1.zip", 
    ".\Phat-Sot-V1.rar"
)

foreach ($file in $archiveFiles) {
    if (Test-Path $file) {
        Remove-Item -Force $file
        Write-Host "‚úÖ ƒê√£ x√≥a $(Split-Path $file -Leaf)" -ForegroundColor Green
    }
}

Write-Host "üéâ Cleanup ho√†n th√†nh!" -ForegroundColor Cyan
Write-Host "üìÅ Repository hi·ªán t·∫°i ch·ªâ c√≤n l·∫°i c√°c file c·∫ßn thi·∫øt" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìã B∆∞·ªõc ti·∫øp theo:" -ForegroundColor Yellow
Write-Host "1. git add ." -ForegroundColor White
Write-Host "2. git commit -m `"üßπ Clean up redundant files and improve documentation`"" -ForegroundColor White
Write-Host "3. git push origin main" -ForegroundColor White
